{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RegisterService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:44397/api/register/';\n  }\n  register(model) {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    const options = {\n      headers: headers\n    };\n    return this.http.post(this.apiUrl, JSON.stringify(model), options);\n  }\n}\nRegisterService.ɵfac = function RegisterService_Factory(t) {\n  return new (t || RegisterService)(i0.ɵɵinject(i1.HttpClient));\n};\nRegisterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RegisterService,\n  factory: RegisterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFP,WAAM,GAAG,uCAAuC;EAEzB;EAExCC,QAAQ,CAACC,KAAwB;IAC/B,MAAMC,OAAO,GAAG,IAAIN,WAAW,CAAC;MAC9B,cAAc,EAAE;KACjB,CAAC;IACF,MAAMO,OAAO,GAAG;MAAED,OAAO,EAAEA;IAAO,CAAE;IACpC,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAAM,IAAI,CAACC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,EAAEE,OAAO,CAAC;EACzE;;AAZWN,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAW,SAAfX,eAAe;EAAAY,YAFd;AAAM","names":["HttpHeaders","RegisterService","constructor","http","register","model","headers","options","post","apiUrl","JSON","stringify","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\samet\\OneDrive\\Masaüstü\\LenaFormFrontEnd\\lena-form\\src\\app\\auth\\register.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { RegisterViewModel } from '../models/RegisterViewModel';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n\r\n  private readonly apiUrl = 'https://localhost:44397/api/register/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  register(model: RegisterViewModel): Observable<any> {\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n    const options = { headers: headers };\r\n    return this.http.post<any>(this.apiUrl, JSON.stringify(model), options);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}