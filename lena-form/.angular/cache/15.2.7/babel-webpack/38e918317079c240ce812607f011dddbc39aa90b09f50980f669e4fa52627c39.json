{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/form-service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"@angular/common\";\nfunction FormComponent_ng_container_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    form: a0\n  };\n};\nfunction FormComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormComponent_ng_container_8_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const form_r5 = ctx.$implicit;\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(10);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, form_r5));\n  }\n}\nfunction FormComponent_ng_template_9_li_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    field: a0\n  };\n};\nfunction FormComponent_ng_template_9_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtemplate(1, FormComponent_ng_template_9_li_6_ng_container_1_Template, 1, 0, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r9 = ctx.$implicit;\n    i0.ɵɵnextContext(2);\n    const _r3 = i0.ɵɵreference(12);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c1, field_r9));\n  }\n}\nfunction FormComponent_ng_template_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ul\");\n    i0.ɵɵtemplate(6, FormComponent_ng_template_9_li_6_Template, 2, 4, \"li\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const form_r7 = ctx.form;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(form_r7.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(form_r7.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", form_r7.fields);\n  }\n}\nfunction FormComponent_ng_template_11_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"(*)\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(2, FormComponent_ng_template_11_span_2_Template, 2, 0, \"span\", 9);\n  }\n  if (rf & 2) {\n    const field_r11 = ctx.field;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", field_r11.name, \" (\", field_r11.dataType, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r11.required);\n  }\n}\nexport class FormComponent {\n  constructor(formService, sanitizer) {\n    this.formService = formService;\n    this.sanitizer = sanitizer;\n    this.sanitizedForms = [];\n  }\n  ngOnInit() {\n    this.formService.getAllForm().subscribe(forms => {\n      this.forms = forms;\n      this.sanitizedForms = forms.map(form => {\n        const sanitizedForm = this.sanitizer.bypassSecurityTrustHtml(`\n          <div class=\"form\">\n            <h3>${form.name}</h3>\n            <p>${form.description}</p>\n            <ul>\n              ${form.fields.map(field => `\n                <li>\n                  <span>${field.name} (${field.dataType})</span>\n                  ${field.required ? '<span class=\"required\">*</span>' : ''}\n                </li>\n              `).join('')}\n            </ul>\n          </div>\n        `);\n        return sanitizedForm;\n      });\n    });\n  }\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormService), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [4, \"ngFor\", \"ngForOf\"], [\"formTemplate\", \"\"], [\"fieldTemplate\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"form\"], [4, \"ngIf\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n      i0.ɵɵelementStart(5, \"title\");\n      i0.ɵɵtext(6, \"Document\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"body\");\n      i0.ɵɵtemplate(8, FormComponent_ng_container_8_Template, 2, 4, \"ng-container\", 4);\n      i0.ɵɵtemplate(9, FormComponent_ng_template_9_Template, 7, 3, \"ng-template\", null, 5, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(11, FormComponent_ng_template_11_Template, 3, 3, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.forms);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i3.NgTemplateOutlet],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAWQA,wBAAuF;;;;;;;;;;IAD3FA,6BAAyC;IACrCA,+FAAuF;IACzFA,0BAAe;;;;;;IADEA,eAAgC;IAAhCA,sCAAgC;;;;;IASzCA,wBAA0F;;;;;;;;;;IAD5FA,0BAAsC;IACpCA,mGAA0F;IAC5FA,iBAAK;;;;;;IADYA,eAAiC;IAAjCA,sCAAiC;;;;;IALtDA,8BAAkB;IACZA,YAAe;IAAAA,iBAAK;IACxBA,yBAAG;IAAAA,YAAsB;IAAAA,iBAAI;IAC7BA,0BAAI;IACFA,0EAEK;IACPA,iBAAK;;;;IANDA,eAAe;IAAfA,kCAAe;IAChBA,eAAsB;IAAtBA,yCAAsB;IAEDA,eAAc;IAAdA,wCAAc;;;;;IASxCA,4BAA6B;IAAAA,mBAAG;IAAAA,iBAAO;;;;;IADvCA,4BAAM;IAAAA,YAAuC;IAAAA,iBAAO;IACpDA,+EAAuC;;;;IADjCA,eAAuC;IAAvCA,wEAAuC;IACtCA,eAAoB;IAApBA,yCAAoB;;;AClBnC,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,WAAwB,EAAUC,SAAuB;IAAzD,gBAAW,GAAXD,WAAW;IAAuB,cAAS,GAATC,SAAS;IAF/D,mBAAc,GAAe,EAAE;EAEkD;EAEjFC,QAAQ;IACN,IAAI,CAACF,WAAW,CAACG,UAAU,EAAE,CAACC,SAAS,CAAEC,KAAa,IAAI;MACxD,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB,IAAI,CAACC,cAAc,GAAGD,KAAK,CAACE,GAAG,CAAEC,IAAU,IAAI;QAC7C,MAAMC,aAAa,GAAG,IAAI,CAACR,SAAS,CAACS,uBAAuB,CAAC;;kBAEnDF,IAAI,CAACG,IAAI;iBACVH,IAAI,CAACI,WAAW;;gBAEjBJ,IAAI,CAACK,MAAM,CAACN,GAAG,CAAEO,KAAK,IAAK;;0BAEjBA,KAAK,CAACH,IAAI,KAAKG,KAAK,CAACC,QAAQ;oBACnCD,KAAK,CAACE,QAAQ,GAAG,iCAAiC,GAAG,EAAE;;eAE5D,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;;;SAGhB,CAAC;QACF,OAAOR,aAAa;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;AA3BWX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRxBzB,+BAAgB;MAEdA,0BAAsB;MAGtBA,6BAAO;MAAAA,wBAAQ;MAAAA,iBAAQ;MAEzBA,4BAAM;MACJA,gFAEiB;MAEfA,+GAUc;MAEdA,iHAGc;MAElBA,iBAAO;;;MArB0BA,eAAQ;MAARA,mCAAQ","names":["i0","FormComponent","constructor","formService","sanitizer","ngOnInit","getAllForm","subscribe","forms","sanitizedForms","map","form","sanitizedForm","bypassSecurityTrustHtml","name","description","fields","field","dataType","required","join","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\samet\\OneDrive\\Masaüstü\\LenaFormFrontEnd\\lena-form\\src\\app\\form\\form.component.html","C:\\Users\\samet\\OneDrive\\Masaüstü\\LenaFormFrontEnd\\lena-form\\src\\app\\form\\form.component.ts"],"sourcesContent":["\n  <!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n  </head>\n  <body>\n    <ng-container *ngFor=\"let form of forms\">\n        <ng-container *ngTemplateOutlet=\"formTemplate; context: { form: form }\"></ng-container>\n      </ng-container>\n      \n      <ng-template #formTemplate let-form=\"form\">\n        <div class=\"form\">\n          <h3>{{ form.name }}</h3>\n          <p>{{ form.description }}</p>\n          <ul>\n            <li *ngFor=\"let field of form.fields\">\n              <ng-container *ngTemplateOutlet=\"fieldTemplate; context: { field: field }\"></ng-container>\n            </li>\n          </ul>\n        </div>\n      </ng-template>\n      \n      <ng-template #fieldTemplate let-field=\"field\">\n        <span>{{ field.name }} ({{ field.dataType }})</span>\n        <span *ngIf=\"field.required\">(*)</span>\n      </ng-template>\n      \n  </body>\n  </html>\n  ","import { Component } from '@angular/core';\nimport { FormService } from '../auth/form-service';\nimport { LoginViewModel } from '../models/LoginViewModel';\nimport { Form } from '../interfaces/Form';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent {\n  forms: Form[] | undefined;\n  sanitizedForms: SafeHtml[] = [];\n\n  constructor(private formService: FormService, private sanitizer: DomSanitizer) { }\n\n  ngOnInit(): void {\n    this.formService.getAllForm().subscribe((forms: Form[]) => {\n      this.forms = forms;\n      this.sanitizedForms = forms.map((form: Form) => {\n        const sanitizedForm = this.sanitizer.bypassSecurityTrustHtml(`\n          <div class=\"form\">\n            <h3>${form.name}</h3>\n            <p>${form.description}</p>\n            <ul>\n              ${form.fields.map((field) => `\n                <li>\n                  <span>${field.name} (${field.dataType})</span>\n                  ${field.required ? '<span class=\"required\">*</span>' : ''}\n                </li>\n              `).join('')}\n            </ul>\n          </div>\n        `);\n        return sanitizedForm;\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}